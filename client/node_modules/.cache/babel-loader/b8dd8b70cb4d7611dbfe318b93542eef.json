{"ast":null,"code":"var _jsxFileName = \"/Users/Hoby/workspace/GITHUB/voting-dapp/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport VotingContract from \"./contracts/Voting.json\";\nimport getWeb3 from \"./getWeb3\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      statusMap: null,\n      owner: null,\n      status: 0,\n      web3: null,\n      accounts: null,\n      contract: null,\n      proposals: null,\n      winner: null\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts(); // Get the contract instance.\n\n        const networkId = await web3.eth.net.getId();\n        const deployedNetwork = VotingContract.networks[networkId];\n        const instance = new web3.eth.Contract(VotingContract.abi, deployedNetwork && deployedNetwork.address); // getting the events  \n\n        let options = {\n          fromBlock: 0,\n          //Number || \"earliest\" || \"pending\" || \"latest\"\n          toBlock: 'latest'\n        };\n        const proposalsEvt = await instance.getPastEvents('ProposalRegistered', options);\n        const owner = await instance.methods.owner().call();\n        const statusMap = new Map();\n        statusMap.set('0', 'Enregitrement des votants');\n        statusMap.set('1', 'Enregitrement des propositions');\n        statusMap.set('2', \"Fin de l'enregitrement des propositions\");\n        statusMap.set('3', 'Session de vote');\n        statusMap.set('4', 'Fin de la session de vote');\n        statusMap.set('5', 'RÃ©sultat de vote'); // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        this.setState({\n          statusMap,\n          owner,\n          web3,\n          accounts,\n          contract: instance,\n          proposals: proposalsEvt\n        }, this.runExample);\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n        console.error(error);\n      }\n    };\n\n    this.runExample = async () => {\n      const _this$state = this.state,\n            accounts = _this$state.accounts,\n            contract = _this$state.contract;\n      const status = await contract.methods.workflowStatus().call(); // Update state with the result.\n\n      this.setState({\n        status: status\n      });\n\n      if (this.state.status == 5) {\n        this.updateWinner();\n      } // getting the events  \n\n\n      let options = {\n        fromBlock: 0,\n        //Number || \"earliest\" || \"pending\" || \"latest\"\n        toBlock: 'latest'\n      };\n      const proposalsEvt = await contract.getPastEvents('ProposalRegistered', options);\n      const p = proposalsEvt.map((proposal, i) => {\n        proposal.selected = false;\n        proposal.index = i;\n        return proposal;\n      });\n      this.setState({\n        proposals: p\n      });\n    };\n\n    this.addVoter = async () => {\n      const _this$state2 = this.state,\n            accounts = _this$state2.accounts,\n            contract = _this$state2.contract;\n      let voterAdress = document.getElementById(\"voterAdress\").value;\n      await contract.methods.addVoter(voterAdress).send({\n        from: accounts[0]\n      });\n      document.getElementById(\"voterAdress\").value = \"\";\n    };\n\n    this.addProposal = async () => {\n      const _this$state3 = this.state,\n            accounts = _this$state3.accounts,\n            contract = _this$state3.contract;\n      let proposalDescrition = document.getElementById(\"proposalDescrition\").value;\n      await contract.methods.addProposal(proposalDescrition).send({\n        from: accounts[0]\n      });\n      document.getElementById(\"proposalDescrition\").value = \"\";\n    };\n\n    this.setVote = async () => {\n      const _this$state4 = this.state,\n            accounts = _this$state4.accounts,\n            contract = _this$state4.contract,\n            proposals = _this$state4.proposals; //FIXME get the proposal checkedId\n\n      const pSelected = proposals.findIndex(item => item.selected);\n      console.log('pSelected ', pSelected);\n      await contract.methods.setVote(pSelected).send({\n        from: accounts[0]\n      });\n    };\n\n    this.tallyVotes = async () => {\n      const _this$state5 = this.state,\n            accounts = _this$state5.accounts,\n            contract = _this$state5.contract;\n      await contract.methods.tallyVotes().send({\n        from: accounts[0]\n      });\n      this.updateStatus();\n      this.updateWinner();\n    };\n\n    this.updateStatus = async () => {\n      const contract = this.state.contract;\n      const status = await contract.methods.workflowStatus().call(); // Update state with the result.\n\n      this.setState({\n        status: status\n      });\n    };\n\n    this.updateWinner = async () => {\n      const contract = this.state.contract;\n      const winnerId = await contract.methods.winningProposalID().call();\n      console.log(winnerId);\n\n      try {\n        const winnerProposal = await contract.methods.getOneProposal(winnerId).call();\n        console.log(winnerProposal.description);\n        this.setState({\n          winner: '#' + winnerId + ' ' + winnerProposal.description\n        });\n      } catch (error) {\n        this.setState({\n          winner: ''\n        });\n      }\n    };\n\n    this.startProposalsRegistering = async () => {\n      const _this$state6 = this.state,\n            accounts = _this$state6.accounts,\n            contract = _this$state6.contract;\n      await contract.methods.startProposalsRegistering().send({\n        from: accounts[0]\n      });\n      this.updateStatus();\n    };\n\n    this.endProposalsRegistering = async () => {\n      const _this$state7 = this.state,\n            accounts = _this$state7.accounts,\n            contract = _this$state7.contract;\n      await contract.methods.endProposalsRegistering().send({\n        from: accounts[0]\n      });\n      this.updateStatus();\n    };\n\n    this.startVotingSession = async () => {\n      const _this$state8 = this.state,\n            accounts = _this$state8.accounts,\n            contract = _this$state8.contract;\n      await contract.methods.startVotingSession().send({\n        from: accounts[0]\n      });\n      this.updateStatus();\n    };\n\n    this.endVotingSession = async () => {\n      const _this$state9 = this.state,\n            accounts = _this$state9.accounts,\n            contract = _this$state9.contract;\n      await contract.methods.endVotingSession().send({\n        from: accounts[0]\n      });\n      this.updateStatus();\n    };\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Loading Web3, accounts, and contract...\");\n    }\n\n    const isOwner = () => {\n      console.log('owner: ' + this.state.owner);\n      console.log('account0: ' + this.state.accounts[0]);\n      return this.state.accounts[0] == this.state.owner;\n    };\n\n    let voterRegistration;\n    let endProposalsRegistering;\n    let startVotingSession;\n    let endVotingSession;\n    let tallyVotes;\n    let addProposal;\n    let votingSession;\n    let result; // Afficahge voterRegistration\n\n    if (this.state.status == 0 && isOwner()) {\n      voterRegistration = React.createElement(\"div\", {\n        id: \"voter-reg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Ajouter un votant\"), \"Entrer l'adresse du votant\", React.createElement(\"input\", {\n        type: \"text\",\n        id: \"voterAdress\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.addVoter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, \"Valider\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.startProposalsRegistering,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \" D\\xE9marrer l'enregitrement des Propositions\")));\n    } // affichage Enregistrer une Proposition\n\n\n    if (this.state.status == 1) {\n      addProposal = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"Enregistrer une Proposition\"), \"Entrer la Proposition\", React.createElement(\"input\", {\n        type: \"text\",\n        id: \"proposalDescrition\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.addProposal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, \"Valider\"));\n\n      if (isOwner()) {\n        endProposalsRegistering = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: this.endProposalsRegistering,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, \" Arr\\xEAter l'enregitrement des Propositions\"));\n      }\n    } // Afficher bouton startVotingSession\n\n\n    if (this.state.status == 2) {\n      if (isOwner()) {\n        startVotingSession = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, \"Liste des propositions\"), this.state.proposals == null ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, \"Pas de propositions\") : React.createElement(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, React.createElement(\"table\", {\n          style: {\n            paddingBottom: '20px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, this.state.proposals.map((proposal, index) => React.createElement(\"tr\", {\n          key: proposal.index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, '#' + proposal.index), \"  \", React.createElement(\"td\", {\n          style: {\n            textAlign: 'left'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, proposal.returnValues.proposalDescription))))), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: this.startVotingSession,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, \" D\\xE9marrer la session de vote\")));\n      } else {\n        startVotingSession = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, \"Liste des propositions\"), this.state.proposals == null ? React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, \"Pas de propositions\") : React.createElement(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, React.createElement(\"table\", {\n          style: {\n            paddingBottom: '20px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }, this.state.proposals.map((proposal, index) => React.createElement(\"tr\", {\n          key: proposal.index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, '#' + proposal.index), \"  \", React.createElement(\"td\", {\n          style: {\n            textAlign: 'left'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, proposal.returnValues.proposalDescription))))));\n      }\n    } // Afficher session de vote\n\n\n    if (this.state.status == 3) {\n      votingSession = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Voter une proposition\"), this.state.proposals == null ? React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"Pas de propositions\") : React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        style: {\n          paddingBottom: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, this.state.proposals.map((proposal, index) => React.createElement(\"tr\", {\n        key: proposal.index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, '#' + proposal.index), \"  \", React.createElement(\"td\", {\n        style: {\n          textAlign: 'left'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, proposal.returnValues.proposalDescription), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        checked: proposal.selected,\n        value: index,\n        type: \"checkbox\",\n        onChange: e => {\n          const c = e.target.checked;\n          const prop = this.state.proposals.map(item => {\n            if (item.index === proposal.index) item.selected = c;else item.selected = false;\n            return item;\n          });\n          console.log(c);\n          console.log(prop);\n          this.setState({\n            proposals: prop\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      })))))), React.createElement(\"button\", {\n        onClick: this.setVote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"Voter\"));\n\n      if (isOwner()) {\n        endVotingSession = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: this.endVotingSession,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }, \" Arr\\xEAter la session de vote\"));\n      }\n    }\n\n    if (this.state.status == 4) {\n      if (isOwner()) tallyVotes = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \" \", React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"Attente de r\\xE9sultat\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.tallyVotes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \" Comptabiliser les votes\"));else tallyVotes = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }, \"Attente de r\\xE9sultat\");\n    }\n\n    if (this.state.status == 5) {\n      result = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, \"Le gagnant est: \", this.state.winner));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"Syst\\xE8me de  Vote\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Utilisateur: \", this.state.accounts[0]), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313\n      },\n      __self: this\n    }, \"Etape: \", this.state.statusMap.get(this.state.status)), voterRegistration, addProposal, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }), endProposalsRegistering, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }), startVotingSession, votingSession, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }), endVotingSession, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }), tallyVotes, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }), result));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Hoby/workspace/GITHUB/voting-dapp/client/src/App.js"],"names":["React","Component","VotingContract","getWeb3","App","state","statusMap","owner","status","web3","accounts","contract","proposals","winner","componentDidMount","eth","getAccounts","networkId","net","getId","deployedNetwork","networks","instance","Contract","abi","address","options","fromBlock","toBlock","proposalsEvt","getPastEvents","methods","call","Map","set","setState","runExample","error","alert","console","workflowStatus","updateWinner","p","map","proposal","i","selected","index","addVoter","voterAdress","document","getElementById","value","send","from","addProposal","proposalDescrition","setVote","pSelected","findIndex","item","log","tallyVotes","updateStatus","winnerId","winningProposalID","winnerProposal","getOneProposal","description","startProposalsRegistering","endProposalsRegistering","startVotingSession","endVotingSession","render","isOwner","voterRegistration","votingSession","result","display","justifyContent","alignItems","paddingBottom","textAlign","returnValues","proposalDescription","e","c","target","checked","prop","get"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport VotingContract from \"./contracts/Voting.json\";\nimport getWeb3 from \"./getWeb3\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = { statusMap: null, owner: null, status: 0, web3: null, accounts: null, contract: null, proposals: null, winner: null };\n\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = VotingContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        VotingContract.abi,\n        deployedNetwork && deployedNetwork.address,\n      );\n\n      // getting the events  \n      let options = {\n        fromBlock: 0,                  //Number || \"earliest\" || \"pending\" || \"latest\"\n        toBlock: 'latest'\n      };\n      const proposalsEvt = await instance.getPastEvents('ProposalRegistered', options);\n\n      const owner = await instance.methods.owner().call();\n\n      const statusMap = new Map();\n      statusMap.set('0', 'Enregitrement des votants');\n      statusMap.set('1', 'Enregitrement des propositions');\n      statusMap.set('2', \"Fin de l'enregitrement des propositions\");\n      statusMap.set('3', 'Session de vote');\n      statusMap.set('4', 'Fin de la session de vote');\n      statusMap.set('5', 'RÃ©sultat de vote');\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n\n      this.setState({ statusMap, owner, web3, accounts, contract: instance, proposals: proposalsEvt }, this.runExample);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n  runExample = async () => {\n    const { accounts, contract } = this.state;\n\n    const status = await contract.methods.workflowStatus().call(); \n    // Update state with the result.\n    this.setState({ status: status });\n    if (this.state.status == 5) {\n      this.updateWinner();\n    }\n   \n    // getting the events  \n    let options = {\n      fromBlock: 0,                  //Number || \"earliest\" || \"pending\" || \"latest\"\n      toBlock: 'latest'\n    };\n    const proposalsEvt = await contract.getPastEvents('ProposalRegistered', options);\n\n    const p = proposalsEvt.map( (proposal, i) => {\n      proposal.selected = false;\n      proposal.index = i;\n      return proposal;\n    });\n    this.setState({ proposals:p });\n    \n  };\n\n  // Ajouter un Votant\n  addVoter = async () => {\n    const { accounts, contract} = this.state;\n    let voterAdress = document.getElementById(\"voterAdress\").value;\n    await contract.methods.addVoter(voterAdress).send({ from: accounts[0] });\n    document.getElementById(\"voterAdress\").value = \"\";\n  };\n\n  // Ajouter une propositions\n  addProposal = async () => {\n    const { accounts, contract} = this.state;\n    let proposalDescrition = document.getElementById(\"proposalDescrition\").value;\n    await contract.methods.addProposal(proposalDescrition).send({ from: accounts[0] });\n    document.getElementById(\"proposalDescrition\").value = \"\";\n  };\n\n  // Ajouter une propositions\n  setVote = async () => {\n      const { accounts, contract, proposals } = this.state;\n      //FIXME get the proposal checkedId\n      const pSelected = proposals.findIndex(item => item.selected);\n      console.log('pSelected ', pSelected);\n     \n      await contract.methods.setVote(pSelected).send({ from: accounts[0] });\n  };\n\n  // Comptabiliser les votes\n  tallyVotes = async () => {\n      const { accounts, contract} = this.state;\n      await contract.methods.tallyVotes().send({ from: accounts[0] });\n      this.updateStatus();\n      this.updateWinner();\n  };\n\n  updateStatus = async () => {\n    const { contract} = this.state;\n    const status = await contract.methods.workflowStatus().call();\n    // Update state with the result.\n    this.setState({ status: status });\n  }\n\n  updateWinner = async () => {\n    const {contract} = this.state;\n    \n      const winnerId = await contract.methods.winningProposalID().call();\n      console.log(winnerId);\n      try {\n        const winnerProposal = await contract.methods.getOneProposal(winnerId).call();\n        console.log(winnerProposal.description);\n        this.setState({ winner: '#' + winnerId + ' ' + winnerProposal.description });\n      } catch (error) {\n        this.setState({ winner: '' });\n      }\n    \n  }\n\n  // DÃ©marrer l'enregistrement des propositions\n  startProposalsRegistering = async () => {\n    const { accounts, contract} = this.state;\n    await contract.methods.startProposalsRegistering().send({ from: accounts[0] });\n    this.updateStatus();\n  };\n  \n  endProposalsRegistering = async () => {\n    const { accounts, contract} = this.state;\n    await contract.methods.endProposalsRegistering().send({ from: accounts[0] });\n    this.updateStatus();\n  };\n\n  startVotingSession = async () => {\n    const { accounts, contract} = this.state;\n    await contract.methods.startVotingSession().send({ from: accounts[0] });\n    this.updateStatus();\n  };\n\n  endVotingSession = async () => {\n    const { accounts, contract} = this.state;\n    await contract.methods.endVotingSession().send({ from: accounts[0] });\n    this.updateStatus();\n  };\n\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n\n    const isOwner = () => {\n      console.log('owner: ' + this.state.owner);\n      console.log('account0: ' + this.state.accounts[0]);\n      return this.state.accounts[0] == this.state.owner;\n    }\n\n    let voterRegistration;\n    let endProposalsRegistering;\n    let startVotingSession;\n    let endVotingSession;\n    let tallyVotes;\n    let addProposal;\n    let votingSession;\n    let result;\n\n    // Afficahge voterRegistration\n    if ( this.state.status == 0 && isOwner() ) {\n      voterRegistration = \n      <div id=\"voter-reg\">\n        <div>\n          <h3>Ajouter un votant</h3>\n          Entrer l'adresse du votant<input type=\"text\" id=\"voterAdress\" />\n          <button onClick={this.addVoter}>Valider</button>\n        </div>\n        <br/>\n        <div><button onClick={this.startProposalsRegistering}> DÃ©marrer l'enregitrement des Propositions</button></div> \n      </div>;\n    }\n\n    // affichage Enregistrer une Proposition\n    if (this.state.status == 1) {\n      addProposal = \n      <div>\n        <h3>Enregistrer une Proposition</h3>\n        Entrer la Proposition<input type=\"text\" id=\"proposalDescrition\" />\n        <button onClick={this.addProposal}>Valider</button>\n      </div>\n      \n      if (isOwner()) {\n        endProposalsRegistering = <div><button onClick={this.endProposalsRegistering}> ArrÃªter l'enregitrement des Propositions</button></div> ;\n      }\n    }\n\n    // Afficher bouton startVotingSession\n    if (this.state.status == 2 ) {\n      if (isOwner()) {\n        startVotingSession = \n        <div>        \n        <div>Liste des propositions</div>\n        {\n          this.state.proposals == null ? <p>Pas de propositions</p> : \n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\n              <table style={{paddingBottom: '20px'}}>\n              { this.state.proposals.map( (proposal, index) => (\n                <tr key={proposal.index}>\n                  <td>{'#' + proposal.index}</td>  <td style={{textAlign: 'left'}}>{proposal.returnValues.proposalDescription}</td>\n                </tr>\n              ) ) }\n            </table></div>\n        }\n        <div><button onClick={this.startVotingSession}> DÃ©marrer la session de vote</button></div> \n        </div>\n      } else {\n        startVotingSession =\n        <div>\n        <div>Liste des propositions</div>\n        {\n          this.state.proposals == null ? <p>Pas de propositions</p> : \n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\n              <table style={{paddingBottom: '20px'}}>\n              { this.state.proposals.map( (proposal, index) => (\n                <tr key={proposal.index}>\n                  <td>{'#' + proposal.index}</td>  <td style={{textAlign: 'left'}}>{proposal.returnValues.proposalDescription}</td>\n                </tr>\n              ) ) }\n            </table></div>\n        }\n        \n        </div>\n        \n      }\n      \n    } \n\n    // Afficher session de vote\n    if (this.state.status == 3 ) {\n      votingSession = \n        <div>\n        <h3>Voter une proposition</h3>\n        {\n          this.state.proposals == null ? <p>Pas de propositions</p> : \n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\n              <table style={{paddingBottom: '20px'}}>\n              { this.state.proposals.map( (proposal, index) => (\n                <tr key={proposal.index}>\n                  <td>{'#' + proposal.index}</td>  <td style={{textAlign: 'left'}}>{proposal.returnValues.proposalDescription}</td>\n\n                  <td><input checked={proposal.selected} value={index} type=\"checkbox\" \n                    onChange={(e) => {\n                      const c = e.target.checked;\n                      const prop = this.state.proposals.map( (item) => {\n                        \n                        if (item.index === proposal.index) \n                          item.selected = c\n                        else\n                          item.selected = false;\n                        return item;\n                      });\n                      console.log(c);\n                      console.log(prop);\n                      this.setState({ proposals:prop });\n                    }\n                      } /></td>\n                </tr>\n              ) ) }\n            </table></div>\n        }\n        <button onClick={this.setVote}>Voter</button>\n        </div>\n\n      if ( isOwner() ) {\n        endVotingSession = <div><button onClick={this.endVotingSession}> ArrÃªter la session de vote</button></div> ;\n      } \n    } \n\n    if ( this.state.status == 4 ) {\n      \n      if (isOwner())\n        tallyVotes = <div> <div>Attente de rÃ©sultat</div><br /><button onClick={this.tallyVotes}> Comptabiliser les votes</button></div> ;\n      else\n      tallyVotes = <div>Attente de rÃ©sultat</div>\n    } \n\n    if ( this.state.status == 5 ) {\n      result = <div><span>Le gagnant est: {this.state.winner}</span></div> ;\n    } \n\n    return (\n      <div className=\"App\">\n        \n        <h2>SystÃ¨me de  Vote</h2>\n        \n        <p>Utilisateur: {this.state.accounts[0]}</p>\n        \n        <div>Etape: {this.state.statusMap.get(this.state.status)}</div>\n       \n       {voterRegistration}\n        \n       {addProposal}\n        <br />\n       {endProposalsRegistering}\n        <br />\n        {startVotingSession}\n\n        {votingSession}\n        <br />\n        {endVotingSession}\n\n        <div>\n\n        <br />\n        {tallyVotes}\n        <br/>\n        {result}\n        </div>\n  \n\n       \n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}